#include "stdafx.h"
#include <iostream>
#include <vector>

using namespace std;

struct matrix {
	vector<int> row, column;
} adj;

void addEdge(matrix);
//int highestDegree(int[][0]);
//int findIsoVert(int[][0]);
//int findLoops(int[][0]);
void displayMatrix(matrix);


int main () {
    char input;
    
    while (true) {
    displayMatrix(adj);
    
    cout << "Vertex with highest degree: " << endl;
    cout << "Isolated vertices: " << endl;
    cout << "Loops : " << endl;
    cout << "Connected: " << endl;
    cout << "Complete: "  << endl << endl;
    
    cout << "1. Add Vertex" << endl;
    cout << "2. Add Edge" << endl;
    cout << "3. QUIT" << endl;
    cout << "INPUT: ";
    cin >> input;
    cout << endl << endl;
    
        switch (input) {
            case '1':
				adj.row.push_back(0);
				adj.column.push_back(0);
                break;
            case '2':
                addEdge(adj);
                break;
            case '3':
                return 0;
            default:
            cout << "Error!" << endl;
                break;
        }
    }
    return 0;
}

void displayMatrix(matrix a) {
	for (auto i: a.row) {
		cout << "[";
		for (auto j: a.column) {
			cout << j << " ";
		}
		cout << "]" << endl;
	}
}

void addEdge(matrix a) {
	int vert1, vert2;
    cout << "Vertex 1: ";
	cin >> vert1;
	cout << "Vertex 2: ";
	cin >> vert2;

	
}

/*int highDeg(int m[][0]) {
    return 0;
}

int findIsoVert(int m[][0]) {
    return 0;
}

int findLoops(int m[][0]) {
    return 0;
}*/
