#include <iostream>

using namespace std;

void addVertex(int[][]);
void addEdge(int[][0]);
int highestDegree(int[][0]);
int findIsoVert(int[][0]);
int findLoops(int[][0]);
void displayMatrix(int[][]);

int main () {
    
    int vertices = 0;
    int matrix[vertices][vertices];
    char input;
    
    while (true) {
    displayMatrix(matrix);
    
    cout << "Vertex with highest degree: " << endl;
    cout << "Isolated vertices: " << endl;
    cout << "Loops : " << endl;
    cout << "Connected: " << endl;
    cout << "Complete: "  << endl << endl;
    
    cout << "1. Add Vertex" << endl;
    cout << "2. Add Edge" << endl;
    cout << "3. QUIT" << endl;
    cout << "INPUT: ";
    cin >> input;
    
        switch (input) {
            case '1':
                addVertex(matrix, vertices);
                break;
            case '2':
                //addEdge(matrix);
                break;
            case '3':
                return 0;
            default:
            cout << "Error!" << endl;
                break;
        }
    }
    return 0;
}

void displayMatrix(int m[][0]) {
    //cout << "[NULL]" << endl;
    /*for (int i = 0; i <= m.size(); i++){
        for (int j = 0; j <= m.size(); j++) {
            cout << "0" << endl;
        }
    }*/
}

void addVertex(int m[][0], int v) {
    v++;
    for (int i = 0; i <= v; i++) {
        m[i][i] = 0;
    }
}

void addEdge(int m[][0]) {
    
}

int highDeg(int m[][0]) {
    return 0;
}

int findIsoVert(int m[][0]) {
    return 0;
}

int findLoops(int m[][0]) {
    return 0;
}
