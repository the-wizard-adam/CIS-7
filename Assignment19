#include <iostream>
#include <string>
#include <vector>

using namespace std;

struct TreeNode {
    string nodeName;   
    TreeNode *left;
    TreeNode *right;
    
    TreeNode (string n) {
        nodeName = n;
        left = NULL;
        right = NULL;
    }
};

void addNode(TreeNode *&parent, string n, vector<TreeNode*> nodes) {
    TreeNode *child;
    child = new TreeNode(n);
    nodes.push_back(child);
}


int main() {
    char choice;
    string parentNode, newNode;
    TreeNode *root;
    vector<TreeNode*> nodes;
    root = new TreeNode("root");
    nodes.push_back(root);
    
    while(true) {
        cout << "Number of nodes: " << endl;
        cout << "Depth: " << endl;
        cout << "Full? " << endl;
        cout << "Complete?" << endl;
        cout << "Preorder: " << endl;
        cout << "Inorder: " << endl;
        cout << "Postorder: " << endl << endl;
        
        cout << "1. Add left child: " << endl;
        cout << "2. Add right child: " << endl;
        cout << "3. QUIT" << endl;
        cout << "INPUT: " << endl;
        cin >> choice;
        
        switch(choice) {
            case '1':
                cout << "Which node?" << endl;
                for (auto node: nodes) {
                    cout << "\t" << node->nodeName << endl;
                    cout << "INPUT: ";
                    cin >> parentNode;
                }
                cin >> parentNode;
                for (auto node: nodes) {
                    if (node->nodeName == parentNode) {
                        if (node->left != NULL) {
                            cout << "error!" << endl;
                            break;
                        }
                        else {
                            cout << "Name left child for " << node->nodeName << ":";
                            cin >> newNode;
                            addNode(node->left, newNode, nodes);
                        }
                    }
                    break;
                }
                cout << "\n\n";
                break;
            case '2':
                break;
            case '3':
                return 0;
            default:
                cout << "Error";
                break;
        }
    }
}
